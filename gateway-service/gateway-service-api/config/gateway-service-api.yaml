openapi: 3.0.0
info:
  title: Gateway Service API
  description: API for Gateway
  version: 1.0.0
tags:
  - name: employee-controller
    description: Employee Controller
  - name: department-controller
    description: Department Controller
  - name: organization-controller
    description: Organization Controller
paths:
  /employee/:
    get:
      tags:
        - employee-controller
      summary: Find all employees
      operationId: findAllEmployees
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - employee-controller
      summary: Add employee
      operationId: addEmployee
      requestBody:
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /employee/department/{departmentId}:
    get:
      tags:
        - employee-controller
      summary: Find employee by department
      operationId: findEmployeeByDepartment
      parameters:
        - name: departmentId
          in: path
          description: departmentId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /employee/organization/{organizationId}:
    get:
      tags:
        - employee-controller
      summary: Find employee by organization
      operationId: findEmployeeByOrganization
      parameters:
        - name: organizationId
          in: path
          description: organizationId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /employee/{id}:
    get:
      tags:
        - employee-controller
      summary: Find employee by Id
      operationId: findEmployeeById
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /department/:
    get:
      tags:
        - department-controller
      summary: Dind all departments
      operationId: findAllDepartments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - department-controller
      summary: Add department
      operationId: addDepartment
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /department/organization/{organizationId}:
    get:
      tags:
        - department-controller
      summary: Find department by organization
      operationId: findDepartmentByOrganization
      parameters:
        - name: organizationId
          in: path
          description: organizationId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /department/organization/{organizationId}/with-employees:
    get:
      tags:
        - department-controller
      summary: Find department by organization Id with employees
      operationId: findDepartmentByOrganizationWithEmployees
      parameters:
        - name: organizationId
          in: path
          description: organizationId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /department/{id}:
    get:
      tags:
        - department-controller
      summary: Find department by Id
      operationId: findDepartmentById
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /organization/:
    get:
      tags:
        - organization-controller
      summary: Find all organizations
      operationId: findAllOrganizations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - organization-controller
      summary: Add organization
      operationId: addOrganization
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /organization/{id}:
    get:
      tags:
        - organization-controller
      summary: Find organization by Id
      operationId: findOrganizationById
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /organization/{id}/with-departments:
    get:
      tags:
        - organization-controller
      summary: Find organization by Id with departments
      operationId: findOrganizationByIdWithDepartments
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /organization/{id}/with-departments-and-employees:
    get:
      tags:
        - organization-controller
      summary: Find Organization by Id with departments and employees
      operationId: findOrganizationByIdWithDepartmentsAndEmployees
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /organization/{id}/with-employees:
    get:
      tags:
        - organization-controller
      summary: Find organization by Id with employees
      operationId: findOrganizationByIdWithEmployees
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    EmployeeDto:
      type: object
      properties:
        age:
          type: integer
          format: int32
        departmentId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        name:
          type: string
        organizationId:
          type: integer
          format: int64
        position:
          type: string
      title: Employee
    DepartmentDto:
      type: object
      properties:
        employees:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDto'
        id:
          type: integer
          format: int64
        name:
          type: string
        organizationId:
          type: integer
          format: int64
      title: Department
    OrganizationDto:
      type: object
      properties:
        address:
          type: string
        departments:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentDto'
        employees:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDto'
        id:
          type: integer
          format: int64
        name:
          type: string
      title: Organization
swagger: '2.0'
info:
  description: Documentation Microservice API v1.0
  version: '1.0'
  title: Microservice API
host: localhost:8060
tags:
  - name: employee-controller
    description: Employee Controller
  - name: department-controller
    description: Department Controller
  - name: organization-controller
    description: Organization Controller
paths:
  /employee/:
    get:
      tags:
        - employee-controller
      summary: findAllEmployees
      operationId: findAllEmployeeUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Employee'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - employee-controller
      summary: addEmployee
      operationId: addEmployeeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: employee
          description: employee
          required: true
          schema:
            $ref: '#/definitions/Employee'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Employee'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /employee/department/{departmentId}:
    get:
      tags:
        - employee-controller
      summary: findEmployeeByDepartment
      operationId: findEmployeeByDepartmentUsingGET
      produces:
        - '*/*'
      parameters:
        - name: departmentId
          in: path
          description: departmentId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Employee'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /employee/organization/{organizationId}:
    get:
      tags:
        - employee-controller
      summary: findEmployeeByOrganization
      operationId: findEmployeeByOrganizationUsingGET
      produces:
        - '*/*'
      parameters:
        - name: organizationId
          in: path
          description: organizationId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Employee'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /employee/{id}:
    get:
      tags:
        - employee-controller
      summary: findEmployeeById
      operationId: findEmployeeByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Employee'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /department/:
    get:
      tags:
        - department-controller
      summary: findAllDepartments
      operationId: findAllDepartmentUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Department'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - department-controller
      summary: addDepartment
      operationId: addDepartmentUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: department
          description: department
          required: true
          schema:
            $ref: '#/definitions/Department'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Department'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /department/organization/{organizationId}:
    get:
      tags:
        - department-controller
      summary: findDepartmentByOrganization
      operationId: findDepartmentByOrganizationUsingGET
      produces:
        - '*/*'
      parameters:
        - name: organizationId
          in: path
          description: organizationId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Department'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /department/organization/{organizationId}/with-employees:
    get:
      tags:
        - department-controller
      summary: findDepartmentByOrganizationWithEmployees
      operationId: findDepartmentByOrganizationWithEmployeesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: organizationId
          in: path
          description: organizationId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Department'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /department/{id}:
    get:
      tags:
        - department-controller
      summary: findDepartmentById
      operationId: findDepartmentByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Department'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /organization/:
    get:
      tags:
        - organization-controller
      summary: findAllOrganizations
      operationId: findAllOrganizationUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - organization-controller
      summary: addOrganization
      operationId: addOrganizationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: organization
          description: organization
          required: true
          schema:
            $ref: '#/definitions/Organization'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /organization/{id}:
    get:
      tags:
        - organization-controller
      summary: findOrganizationById
      operationId: findOrganizationByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /organization/{id}/with-departments:
    get:
      tags:
        - organization-controller
      summary: findOrganizationByIdWithDepartments
      operationId: findOrganizationByIdWithDepartmentsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /organization/{id}/with-departments-and-employees:
    get:
      tags:
        - organization-controller
      summary: findOrganizationByIdWithDepartmentsAndEmployees
      operationId: findOrganizationByIdWithDepartmentsAndEmployeesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /organization/{id}/with-employees:
    get:
      tags:
        - organization-controller
      summary: findOrganizationByIdWithEmployees
      operationId: findOrganizationByIdWithEmployeesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Organization'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Employee:
    type: object
    properties:
      age:
        type: integer
        format: int32
      departmentId:
        type: integer
        format: int64
      id:
        type: integer
        format: int64
      name:
        type: string
      organizationId:
        type: integer
        format: int64
      position:
        type: string
    title: Employee
  Department:
    type: object
    properties:
      employees:
        type: array
        items:
          $ref: '#/definitions/Employee'
      id:
        type: integer
        format: int64
      name:
        type: string
      organizationId:
        type: integer
        format: int64
    title: Department
  Organization:
    type: object
    properties:
      address:
        type: string
      departments:
        type: array
        items:
          $ref: '#/definitions/Department'
      employees:
        type: array
        items:
          $ref: '#/definitions/Employee'
      id:
        type: integer
        format: int64
      name:
        type: string
    title: Organization
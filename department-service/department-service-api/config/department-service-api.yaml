openapi: 3.0.0
info:
  title: Department Service API
  description: API for Department
  version: 1.0.0

paths:
  /rest/department/:
    get:
      summary: Find all Departments
      operationId: findAll
      tags:
        - department
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      summary: Add Department
      operationId: create
      tags:
        - department
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /rest/department/organization/{organizationId}:
    get:
      summary: Find Department by Organization
      operationId: findByOrganization
      tags:
        - department
      parameters:
        - name: organizationId
          in: path
          description: Organization Id
          required: true
          schema:
            type : integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /rest/department/organization/{organizationId}/with-employees:
    get:
      summary: Find Department by Organization with employees
      operationId: findByOrganizationWithEmployees
      tags:
        - department
      parameters:
        - name: organizationId
          in: path
          description: Organization Id
          required: true
          schema:
            type : integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DepartmentDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /rest/department/{id}:
    get:
      summary: Find Department by Id
      operationId: findById
      tags:
        - department
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type : integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    DepartmentDto:
      type: object
      properties:
        employees:
          type: array
          items:
            $ref: '#/definitions/EmployeeDto'
        id:
          type: integer
          format: int64
        name:
          type: string
        organizationId:
          type: integer
          format: int64
    EmployeeDto:
      type: object
      properties:
        age:
          type: integer
          format: int32
        departmentId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        name:
          type: string
        organizationId:
          type: integer
          format: int64
        position:
          type: string
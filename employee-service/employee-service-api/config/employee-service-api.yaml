openapi: 3.0.0
info:
  title: Employee Service API
  description: API for Employee
  version: 1.0.0

paths:
  /rest/employee/:
    get:
      summary: Find all Employees
      operationId: findAll
      tags:
        - employee
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      summary: Add Employee
      operationId: create
      tags:
        - employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /rest/employee/department/{departmentId}:
    get:
      summary: Find Employee by Department
      operationId: findByDepartment
      tags:
        - employee
      parameters:
        - name: departmentId
          in: path
          description: Department Id
          required: true
          schema:
            type : integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /rest/employee/organization/{organizationId}:
    get:
      summary: Find Employee by Organization
      operationId: findByOrganization
      tags:
        - employee
      parameters:
        - name: organizationId
          in: path
          description: Organization Id
          required: true
          schema:
            type : integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /rest/employee/{id}:
    get:
      summary: Find Employee by Id
      operationId: findById
      tags:
        - employee
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type : integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  securitySchemes:
    BearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    EmployeeDto:
      type: object
      properties:
        age:
          type: integer
          format: int32
        departmentId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        name:
          type: string
        organizationId:
          type: integer
          format: int64
        position:
          type: string
security:
  - BearerAuth: []